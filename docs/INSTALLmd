##Installation

The current best performer can be run without installation at mamware.github.io/acustsee/web
to test the other approachs such as the fft one, you can run it from mamware.github.io/acustsee/web/fft or mamware.github.io/acustsee/web/tonnetz

## To test our first commit wich is a Python script

A simple proof-of-concept: process a static image with Gabor filters and output basic HRTF-like audio (left/right panning)

## Setup

**Clone the Repo**:
   ```bash
   git clone https://github.com/MAMware/acoustsee.git
   cd acoustsee
   ```
**Set Up Virtual Environment**:
  ```bash
  python3 -m venv acoustsee_env
  source acoustsee_env/bin/activate
  ```
**Install Dependencies**:
	```bash
	pip install opencv-python-headless numpy scipy pyo
	```
**Run the MVP**:
For local machines
	```bash
	python src/main.py
	```
For headless environments (e.g., Codespaces):
  ```bash
  python src/main_codespaces.py
  ```

Try it with examples/wall_left.jpg to hear a basic left/right audio split!

## Troubleshooting
- **Windows `pyo` Installation**:
  - Use Python 3.11 or 3.12 for best compatibility.
  - Install Microsoft Visual C++ Build Tools: [Download](https://visualstudio.microsoft.com/visual-cpp-build-tools/).
  - Ensure PortAudio is installed and in your PATH.
  - Example:
    ```bash
    python3.11 -m venv acoustsee_env
    .\acoustsee_env\Scripts\activate
    pip install opencv-python numpy scipy pyo
    ```
- **Linux `pyo` Installation (e.g., GitHub Codespaces)**:
  - Use a virtual environment:
    ```bash
    python3 -m venv acoustsee_env
    source acoustsee_env/bin/activate
    ```
  - Install development libraries:
    ```bash
    sudo apt update
    sudo apt install -y libportaudio2 portaudio19-dev libportmidi-dev liblo-dev libsndfile1-dev libasound-dev libjack-dev build-essential libgl1-mesa-glx
    ```
  - Install Python dependencies:
    ```bash
    pip install opencv-python-headless numpy scipy pyo
    ```
  - If `opencv-python` fails with `libGL.so.1` errors, use `opencv-python-headless`:
    ```bash
    pip uninstall -y opencv-python
    pip install opencv-python-headless
    ```
  - If Python 3.12 fails, try Python 3.11:
    ```bash
    sudo apt install -y python3.11 python3.11-venv
    python3.11 -m venv acoustsee_env
    source acoustsee_env/bin/activate
    pip install opencv-python-headless numpy scipy pyo
    ```
- **Headless Environments (e.g., Codespaces)**:
  - Codespaces lacks audio output. Use `main_codespaces.py` to generate WAV files:
    ```bash
    python src/main_codespaces.py
    ```
  - Download `examples/output.wav` via the Codespaces file explorer and play locally.
  - Example WAV test:
    ```python
    from pyo import *
    s = Server(audio="offline").boot()
    s.recordOptions(dur=2, filename="test.wav")
    sine = Sine(freq=440, mul=0.5).out()
    s.start()
    s.stop()
    ```
- **WxPython/Tkinter Warning**:
  - `pyo` may warn about missing WxPython, falling back to Tkinter. This is harmless for WAV generation.
- **SetuptoolsDeprecationWarning**:
  - A warning about `License :: OSI Approved :: GNU General Public License` is harmless (itâ€™s a `pyo` packaging issue).
- **Still stuck?** Open an issue on GitHub or ping us on [X](https://x.com/MAMware).
